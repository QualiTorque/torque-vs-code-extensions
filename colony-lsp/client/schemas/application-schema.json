{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "$ref": "#/definitions/Colony-Application",
    "definitions": {
        "Colony-Application": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "configuration": {
                    "$ref": "#/definitions/Configuration"
                },
                "debugging": {
                    "$ref": "#/definitions/Debugging"
                },
                "infrastructure": {
                    "$ref": "#/definitions/Infrastructure"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Input"
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Output"
                    }
                },
                "kind": {
                    "type": "string",
                    "enum": ["application"]
                },
                "spec_version": {
                    "type": "integer",
                    "enum": [1]
                },
                "source": {
                    "$ref": "#/definitions/Source"
                }
            },
            "optional": [
                "inputs",
                "outputs",
                "infrastructure",
                "debugging"
            ],
            "required": [
                "configuration",
                "kind",
                "source",
                "spec_version"
            ],
            "title": "Colony Application"
        },
        "Configuration": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "healthcheck": {
                    "$ref": "#/definitions/Healthcheck"
                },
                "initialization": {
                    "$ref": "#/definitions/Initialization"
                },
                "start": {
                    "$ref": "#/definitions/ConfigStart"
                }
            },
            "required": [
                "healthcheck"                
            ],
            "title": "Configuration"
        },
        "Healthcheck": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "timeout": {
                    "type": "integer",
                    "description": "(Optional) Specifies the time to wait (in seconds) for the health check to succeed.",
                    "default": 60
                },
                "wait_for_ports": {
                    "type": "string",
                    "default": "ALL",
                    "description": "(Optional if a script is specified) CloudShell Colony already implements some basic checks which make sure that the application's internal ports, which are declared in the 'connectivity' section of the application YAML, are ready."
                },
                "script": {
                    "type": "string"
                }
            },
            "anyOf": [
                {"required": ["wait_for_ports", "timeout"]},
                {"required": ["script"]}
            ],
            "title": "Healthcheck"
        },
        "Initialization": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "script": {
                    "type": "string"
                }                
            },
            "required": ["script"],
            "title": "Initialization configuration",
            "description": "This script's main function is to configure everything needed to run the application, including installing dependencies and downloading packages."
        },
        "ConfigStart": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "script": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                }
            },
            "anyOf": [
                {"required": ["command"]},
                {"required": ["script"]}
            ],
            "title": "Start application",
            "description": "This is the actual command that will run the application."
        },
        "Debugging": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "allow_direct_access": {
                    "type": "boolean"
                },
                "connection_protocol": {
                    "type": "string",
                    "enum": ["SSH", "RDP", "RDP,SSH"]
                }                
            },
            "required":[
                "allow_direct_access"
            ],
            "optional": [
                "connection_protocol"
            ],
            "title": "Debugging"
        },
        "Infrastructure": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "compute": {
                    "$ref": "#/definitions/Compute"
                },
                "connectivity": {
                    "$ref": "#/definitions/Connectivity"
                },
                "permissions": {
                    "$ref": "#/definitions/InfraPermissions"
                }
            },
            "required": [
                "compute",
                "connectivity"
            ],
            "title": "Infrastructure",
            "description": "In this section you define the infrastructure on which the application will run on. You can choose the compute, define ports to open for external or internal communication and configure custom permissions. The exact compute specifications are different per cloud provider. The whole infrastructure section is optional, and if not defined defaults will be used."
        },
        "Compute": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "spec": {
                    "$ref": "#/definitions/Spec"
                }
            },
            "required": [
                "spec"
            ],
            "title": "Compute"
        },
        "InfraPermissions": {
            "type": "object",
            "additionalProperties": false,
            "description": "Specify permissions to your infrastructure instances to perform actions using the cloud provider's services",
            "properties": {
                "aws": {
                    "$ref": "#/definitions/InfraPermissionsAws"
                },
                "azure": {
                    "$ref": "#/definitions/InfraPermissionsAzure"
                }
            },
            "anyOf": [
                {"required": ["aws"]},
                {"required": ["azure"]}
            ]
        },
        "InfraPermissionsAws": {
            "type": "object",
            "additionalProperties": false,
            "description": "Specify permissions to your AWS infrastructure instances.",
            "properties": {
                "iam_instance_profile": {
                    "type": "string",
                    "description": "Name of the EC2 instance profile (not the full ARN)."
                }                
            },
            "required": ["iam_instance_profile"]
        },
        "InfraPermissionsAzure": {
            "type": "object",
            "additionalProperties": false,
            "description": "Specify permissions to your Azure infrastructure instances.",
            "properties": {
                "managed_identity_id": {
                    "type": "string",
                    "description": "User-assigned managed identity. Value in the format of 'resource_group_name/identity_name'",
                    "pattern": "^[\\w\\-_]+\\/[\\w\\-_]+$"
                }
            },
            "required": ["managed_identity_id"]
        },
        "Spec": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "azure": {
                    "$ref": "#/definitions/Azure"
                },
                "aws": {
                    "$ref": "#/definitions/Aws"
                },
                "kubernetes": {
                    "$ref": "#/definitions/Kubernetes"
                }
            },
            "anyOf": [
                {"required" : ["azure"]},
                {"required" : ["aws"]},
                {"required" : ["kubernetes"]}
            ],
            "title": "Spec"
        },
        "Azure": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "vm_size": {
                    "type": "string",
                    "description": "The name of a Vm size on Azure, e.g. Standard_D2_v3"
                }
            },
            "required": [
                "vm_size"
            ],
            "title": "Azure",
            "description": "Specifications for an Azure compute"
        },
        "Aws": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "instance_type": {
                    "type": "string",
                    "description": "The name of an AWS instance type, e.g. c5.large, can also contain CSV of types to pick the first available one"
                }
            },
            "required": [
                "instance_type"
            ],
            "title": "AWS",
            "description": "Specifications for an AWS compute"
        },
        "Kubernetes": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "cpu": {
                    "type": "string",
                    "description": "CPU limitation for Kubernetes VM"
                },
                "ram": {
                    "type": "string",
                    "description": "RAM limitation for Kubernetes VM"
                }
            },
            "required": [
                "cpu", 
                "ram"
            ],
            "title": "Kubernetes",
            "description": "Specifications for a K8S compute"
        },
        "Connectivity": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "external": {
                    "$ref": "#/definitions/External"
                },
                "internal": {
                    "$ref": "#/definitions/Internal"
                }
            },
            "anyOf": [
                {"required" : ["internal"]},
                {"required" : ["external"]}
            ],
            "title": "Connectivity",
            "description": "This section defines the ports for communication with the application and the ingress-healhcheck."
        },
        "External": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/PortInfoExternal"
            },
            "minItems": 1,
            "title": "Internal/External"
        },
        "Internal": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/PortInfoInternal"
            },
            "minItems": 1,
            "title": "Internal/External"
        },
        "PortInfoExternal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "port_info": {
                    "$ref": "#/definitions/PortInfoPropsExternal"
                }
            },
            "required": ["port_info"],
            "title": "Port Information"
        },
        "PortInfoInternal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "port_info": {
                    "$ref": "#/definitions/PortInfoPropsInternal"
                }
            },
            "required": ["port_info"],
            "title": "Port Information"
        },
        "PortInfoPropsExternal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "port": {
                    "$ref": "#/definitions/Port"
                }
            },
            "required" : ["port"],
            "title": "Port Info",
            "description": "Port Info description"
        },
        "PortInfoPropsInternal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "port": {
                    "$ref": "#/definitions/Port"
                },
                "port-range": {
                    "$ref": "#/definitions/PortRange"
                },
                "ingress-healthcheck": {
                    "$ref": "#/definitions/IngressHealthcheck"
                }
            },
            "oneOf": [
                {"required" : ["port"]},
                {"required" : ["port-range"]}
            ],            
            "title": "Port Info",
            "description": "Port Info description"
        },
        "Port": {
            "type": ["integer", "string"],
            "pattern": "^(\\d+|\\$[\\w\\.\\-]+)$",
            "title": "Port",
            "description": "Internal port number that should be opened on the VM."
        },
        "PortRange": {
            "type": ["string", "integer"],
            "title": "Port Range",
            "description": "Internal port numbers and/or ranges that should be opened on the VM."
        },
        "IngressHealthcheck": {
            "type": "object",
            "description": "Verifies that the applications that are supposed to be accessible from outside the environment are indeed accessible.",
            "properties": {
                "healthy-threshold": {
                    "type": "integer",
                    "description": "Number of consecutive checks that need to pass before considering the instance of the application healthy.",
                    "default": 5
                },
                "interval": {
                    "type": "integer",
                    "description": "Polling interval, in seconds.",
                    "default": 30
                },
                "path": {
                    "type": "string",
                    "description": "Path of the URL to use for the test. In other words, /api/health means the load balancer will access this path in the URL and compare the status code it gets in the response with the status codes that appear in the status-codes element to determine if this is a healthy or unhealthy response.",
                    "default": "/"
                },
                "status-codes": {
                    "type": ["string", "integer"],
                    "description": "Accepted http responses.",
                    "default": "200-299"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The amount of time in seconds to wait for a respond before considering it unhealthy.",
                    "default": 5
                },
                "unhealthy-threshold": {
                    "type": "integer",
                    "description": "Number of consecutive checks that need to fail before considering the instance of the application unhealthy.",
                    "default": 2
                }
            },
            "anyOf": [
                {"required": ["healthy-threshold"]},
                {"required": ["interval"]},
                {"required": ["path"]},
                {"required": ["status-codes"]},
                {"required": ["timeout"]},
                {"required": ["unhealthy-threshold"]}
            ],
            "additionalProperties": false,
            "title": "Ingress Healthcheck"
        },
        "Input": {
            "type": ["string", "object"],
            "additionalProperties": true,
            "title": "Input"
        },
        "Output": {
            "type": "string",
            "additionalProperties": true,
            "title": "Output"
        },
        "Source": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "image": {
                    "$ref": "#/definitions/Image"
                },
                "os_type": {
                    "type": "string",
                    "enum": ["linux", "windows"],
                    "description": "Operating system for the application's VM."
                }
            },
            "required": [
                "image",
                "os_type"
            ],
            "title": "Source"
        },
        "Image": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "azure_image": {
                    "$ref": "#/definitions/AzureImage"
                },
                "ami": {
                    "$ref": "#/definitions/Ami"
                },
                "docker_image": {
                    "$ref": "#/definitions/DockerImage"
                }
            },
            "anyOf": [
                {"required": ["azure_image"]},
                {"required": ["ami"]},
                {"required": ["docker_image"]}
            ],
            "title": "Image"
        },
        "AzureImage": {
            "type": "array",
            "additionalItems": false,
            "minItems": 1,
            "maxItems": 1,
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "properties": {
                            "urn": {
                                "type": "string",
                                "description": "Image urn, for example: Canonical:UbuntuServer:16.04-LTS:latest. Version number (or 'latest'). Omit this argument to use the latest version."
                            },
                            "username": {
                                "type": "string",
                                "description": "(Optional) Username to set on the application's VM, to allow SSH/RDP access to the VM."
                            },
                            "custom_image": {
                                "$ref": "#/definitions/AzureCustomImage"
                            },
                            "gallery": {
                                "$ref": "#/definitions/AzureGalleryImage"
                            },
                            "custom": {
                                "type": "string",
                                "description": "A concatenated string of the Custom Image details or the Gallery image details."
                            }
                        },
                        "additionalProperties": false,
                        "oneOf": [
                            {"required": ["urn"]},
                            {"required": ["custom_image"]},
                            {"required": ["gallery"]},
                            {"required": ["custom"]}
                        ]
                    }
                ]
            },
            "title": "Azure Image Details"
        },
        "Ami": {
            "type": "array",
            "additionalItems": false,
            "minItems": 1,
            "maxItems": 1,
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "region": {
                                "type": "string",
                                "description": "Id of an AWS region e.g. eu-west-1"
                            },
                            "username": {
                                "type": "string",
                                "description": "(Optional) Username to set on the application's instance, to allow direct access to the instance. \r\nFor SSH/RDP connection to the instance, make sure the username is defined both in the AMI image and application YAML. \r\nPassword is not needed."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "region"
                        ]
                    }
                ]                
            },
            "title": "AMI Details"
        },
        "DockerImage": {
            "type": "array",
            "additionalItems": false,
            "minItems": 1,
            "maxItems": 1,
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the docker image. By default, Colony will search for the image on Docker Hub."
                            },
                            "pull_secret": {
                                "type": "string",
                                "description": "Name of the secret. Used to specify a private image repository."
                            },
                            "tag": {
                                "type": "string",
                                "description": "Tag defining image version to use."
                            },
                            "username": {
                                "type": "string",
                                "description": "(Optional) Username to set on the application's VM, to allow direct access to the VM."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "name",
                            "tag"
                        ]
                    }
                ]
            },
            "title": "Kubernetes Docker Image Details"
        },
        "AzureCustomImage": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "subscription_id": {
                    "type": "string",
                    "description": "(Optional) Azure subscription id. Omit this argument if you want Colony to use the Subcription ID of the cloud account."
                },
                "resource_group": {
                    "type": "string",
                    "description": "Resource group name."
                },
                "image": {
                    "type": "string",
                    "description": "Image name."
                }                
            },
            "required": [
                "image",
                "resource_group"
            ],
            "title": "Azure Custom Image Details"
        },
        "AzureGalleryImage": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "subscription_id": {
                    "type": "string",
                    "description": "(Optional) Azure subscription id. Omit this argument if you want Colony to use the Subcription ID of the cloud account."
                },
                "resource_group": {
                    "type": "string",
                    "description": "Resource group name."
                },
                "shared_image_gallery": {
                    "type": "string",
                    "description": "Shared image gallery name."
                },
                "image_definition": {
                    "type": "string",
                    "description": "The name of the image in the gallery."
                },
                "image_version": {
                    "type": "string",
                    "description": "(Optional) The version number of the gallery image (or 'latest'). Omit this argument to use the latest version."
                }
            },
            "required": [
                "shared_image_gallery",
                "image_definition",
                "resource_group"
            ],
            "title": "Azure Gallery Image Details"
        }
    }
}
